"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5544],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function p(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),m=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):p(p({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=m(a),c=r,k=s["".concat(o,".").concat(c)]||s[c]||d[c]||l;return a?n.createElement(k,p(p({ref:t},u),{},{components:a})):n.createElement(k,p({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,p=new Array(l);p[0]=s;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var m=2;m<l;m++)p[m]=a[m];return n.createElement.apply(null,p)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},3284:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>p,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const l={title:"\uacbd\ub85c \uc12c\ub124\uc77c \uc0dd\uc131\uae30",slug:35,tags:["Image","Thumbnail"]},p=void 0,i={permalink:"/35",editUrl:"https://github.com/greeng00se/greeng00se.github.io/tree/main/blog/2023-07-20-\uacbd\ub85c \uc378\ub124\uc77c \uc0dd\uc131\uae30.mdx",source:"@site/blog/2023-07-20-\uacbd\ub85c \uc378\ub124\uc77c \uc0dd\uc131\uae30.mdx",title:"\uacbd\ub85c \uc12c\ub124\uc77c \uc0dd\uc131\uae30",description:"\uac1c\uc694",date:"2023-07-20T00:00:00.000Z",formattedDate:"2023\ub144 7\uc6d4 20\uc77c",tags:[{label:"Image",permalink:"/tags/image"},{label:"Thumbnail",permalink:"/tags/thumbnail"}],readingTime:7.81,hasTruncateMarker:!1,authors:[],frontMatter:{title:"\uacbd\ub85c \uc12c\ub124\uc77c \uc0dd\uc131\uae30",slug:"35",tags:["Image","Thumbnail"]},nextItem:{title:"\uc6f9\uc18c\ucf13",permalink:"/34"}},o={authorsImageUrls:[]},m=[{value:"\uac1c\uc694",id:"\uac1c\uc694",level:2},{value:"\uc0ac\uc6a9 \uae30\uc220",id:"\uc0ac\uc6a9-\uae30\uc220",level:3},{value:"\uc694\uad6c\uc0ac\ud56d",id:"\uc694\uad6c\uc0ac\ud56d",level:3},{value:"\uae30\ub2a5 \uad6c\ud604",id:"\uae30\ub2a5-\uad6c\ud604",level:2},{value:"\uc12c\ub124\uc77c \uc0dd\uc131 \uc544\uc774\ub514\uc5b4",id:"\uc12c\ub124\uc77c-\uc0dd\uc131-\uc544\uc774\ub514\uc5b4",level:3},{value:"\uc704\uacbd\ub3c4 \ucc98\ub9ac \ubc29\ubc95",id:"\uc704\uacbd\ub3c4-\ucc98\ub9ac-\ubc29\ubc95",level:3},{value:"\uc774\ubbf8\uc9c0 \ucd9c\ub825 \ubc29\uc2dd",id:"\uc774\ubbf8\uc9c0-\ucd9c\ub825-\ubc29\uc2dd",level:3},{value:"\ub85c\uceec\uc5d0\uc11c \uae30\ub2a5 \uad6c\ud604",id:"\ub85c\uceec\uc5d0\uc11c-\uae30\ub2a5-\uad6c\ud604",level:3},{value:"\ubc30\ud3ec",id:"\ubc30\ud3ec",level:2},{value:"AWS Lambda",id:"aws-lambda",level:3},{value:"\ub78c\ub2e4 S3 \uc811\uadfc\uc744 \uc704\ud55c IAM \uc0dd\uc131",id:"\ub78c\ub2e4-s3-\uc811\uadfc\uc744-\uc704\ud55c-iam-\uc0dd\uc131",level:3},{value:"\ub78c\ub2e4 \ubc30\ud3ec\uc6a9 \ucf54\ub4dc",id:"\ub78c\ub2e4-\ubc30\ud3ec\uc6a9-\ucf54\ub4dc",level:3},{value:"Layer \ucd94\uac00\ub97c \uc704\ud55c zip \ud30c\uc77c \uc0dd\uc131",id:"layer-\ucd94\uac00\ub97c-\uc704\ud55c-zip-\ud30c\uc77c-\uc0dd\uc131",level:3},{value:"<code>No module named &#39;numpy.core._multiarray_umath&#39;</code> \uc5d0\ub7ec",id:"no-module-named-numpycore_multiarray_umath-\uc5d0\ub7ec",level:3},{value:"\uc801\uc815\uae30\uc220\uc5d0 \ub300\ud55c \uc0dd\uac01",id:"\uc801\uc815\uae30\uc220\uc5d0-\ub300\ud55c-\uc0dd\uac01",level:2},{value:"\ucc38\uace0 \uc790\ub8cc",id:"\ucc38\uace0-\uc790\ub8cc",level:2}],u={toc:m};function d(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\uac1c\uc694"},"\uac1c\uc694"),(0,r.kt)("p",null,"\uc5ec\ud589 \uacbd\ub85c\ub97c \uac04\ub7b5\ud558\uac8c \ubcf4\uc5ec\uc8fc\ub294 \uc12c\ub124\uc77c\uc744 \uc0dd\uc131\ud558\uae30\ub85c \ud588\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ub2e8\uc77c \uacbd\ub85c\ub97c \ubcf4\uc5ec\uc8fc\ub294 \uac83\uc740 Map Api\uc758 \uacbd\ub85c \uadf8\ub9ac\uae30 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uba74 \ub41c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ud558\uc9c0\ub9cc \ub2e4\uc218\uc758 \uc5ec\ud589 \uae30\ub85d\uc744 \uac04\ub7b5\ud558\uac8c \ubcf4\uc5ec\uc900\ub2e4\uba74 \ud574\ub2f9 \uae30\ub2a5\uc744 \uc0ac\uc6a9\ud558\uae30 \uc5b4\ub824\uc6b8 \uac83\uc774\ub77c\uace0 \uc0dd\uac01\ud588\ub2e4.    "),(0,r.kt)("h3",{id:"\uc0ac\uc6a9-\uae30\uc220"},"\uc0ac\uc6a9 \uae30\uc220"),(0,r.kt)("p",null,"\uc5b8\uc5b4: Python 3.10",(0,r.kt)("br",{parentName:"p"}),"\n","\uc774\ubbf8\uc9c0 \uc0dd\uc131: matplotlib",(0,r.kt)("br",{parentName:"p"}),"\n","\uc11c\ube44\uc2a4: AWS Lambda, AWS API Gateway",(0,r.kt)("br",{parentName:"p"}),"\n","\uc774\ubbf8\uc9c0 \uc800\uc7a5 \ubc0f URL: AWS S3, AWS CloudFront  "),(0,r.kt)("p",null,"\ud50c\ub85c\uc6b0\ub294 \ub2e4\uc74c\uacfc \uac19\ub2e4.  "),(0,r.kt)("mermaid",{value:"graph LR\n  Server -- \uc0dd\uc131 \uc694\uccad --\x3e AG[API Gateway] --\x3e Lambda --\x3e S3\n  Client --\x3e CloudFront --\x3e S3"}),(0,r.kt)("h3",{id:"\uc694\uad6c\uc0ac\ud56d"},"\uc694\uad6c\uc0ac\ud56d"),(0,r.kt)("p",null,"\uc704\ub3c4, \uacbd\ub3c4\ub85c \uc774\ub8e8\uc5b4\uc9c4 \ubc30\uc5f4\uc744 \uc785\ub825\ubc1b\ub294\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc704\uacbd\ub3c4 \ucc28\uc774\uac00 \ud06c\ub4e0 \uc791\ub4e0 \uc81c\uacf5\ud558\ub294 \uc774\ubbf8\uc9c0 \ub0b4\uc5d0 \uacbd\ub85c\uac00 \ub2e4 \ud3ec\ud568\ub418\uc5b4 \uc788\uc5b4\uc57c \ud55c\ub2e4.  "),(0,r.kt)("h2",{id:"\uae30\ub2a5-\uad6c\ud604"},"\uae30\ub2a5 \uad6c\ud604"),(0,r.kt)("h3",{id:"\uc12c\ub124\uc77c-\uc0dd\uc131-\uc544\uc774\ub514\uc5b4"},"\uc12c\ub124\uc77c \uc0dd\uc131 \uc544\uc774\ub514\uc5b4"),(0,r.kt)("p",null,"\uc8fc\uc5b4\uc9c4 \ub370\uc774\ud130\ub294 \uc704\ub3c4, \uacbd\ub3c4\ub85c \uc774\ub8e8\uc5b4\uc9c4 \ubc30\uc5f4\uc774\uace0 \uc774\ub97c \ud1b5\ud574 \uc5b4\ub5bb\uac8c \uc12c\ub124\uc77c\uc744 \ub9cc\ub4e4\uc9c0 \uace0\ubbfc\uc744 \ub9ce\uc774 \ud588\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","GPT\uc5d0\uac8c \ubb3c\uc5b4\ubd10\ub3c4 \uc774\uc0c1\ud55c \ub2f5\ubcc0\ub9cc \ubc1b\uc544\uc11c(\uc9c8\ubb38\ud558\ub294 \ub2a5\ub825\uc774 \ubd80\uc871\ud588\ub098\ubcf4\ub2e4..) \ub2f9\ud669\uc2a4\ub7ec\uc6e0\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc544\ub294 \ub3d9\uc0dd\uacfc ",(0,r.kt)("inlineCode",{parentName:"p"},"\uacbd\ub85c\ub97c \uac04\ub7b5\ud558\uac8c \ubcf4\uc5ec\uc8fc\ub294 \uac83")," \uc5d0 \ub300\ud574 \uc774\uc57c\uae30\ub97c \uc870\uae08 \ub098\ub208 \ub2e4\uc74c \uc544\uc774\ub514\uc5b4\ub97c \uc5bb\uc5c8\ub2e4.  "),(0,r.kt)("p",null,"\ud558\uc9c0\ub9cc \ucc98\uc74c \uc791\uc131\ud55c \ucf54\ub4dc\uac00 \ud604\uc2e4\uacfc \uc720\uc0ac\ud558\uc9c0\ub9cc \ud2b9\uc815 \uc0c1\ud669\uc5d0\uc11c \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc774\ub294 x, y \uac01\uac01 \uc815\uaddc\ud654\ub97c \uc9c4\ud589\ud558\uace0 \ud50c\ub86f\uc744 \uadf8\ub824\uc11c \ubc1c\uc0dd\ud55c \ubb38\uc81c\uc600\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc608\ub97c \ub4e4\uc5b4 y\uc758 \uac12\uc774 \ub2e4 \ub3d9\uc77c\ud558\uace0 \ud558\ub098\ub9cc 0.00000001\uc758 \ucc28\uc774\ub97c \uac00\uc9c0\ub294 \uac12\uc774 \uc788\ub2e4\uba74 \uacbd\ub85c\uc5d0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\ub2e4.  "),(0,r.kt)("p",null,"\ud6c4\ucd94\uc640 \ub9ac\uc624\uc5d0\uac8c \uc870\uc5b8\uc744 \uad6c\ud574\uc11c \uc815\uaddc\ud654 \uc9c4\ud589\ud560 \ub54c \uc785\ub825\ubc1b\uc740 \uc704\uacbd\ub3c4 \ubc30\uc5f4\uc758 max(x \ucd5c\ub313\uac12 - x \ucd5c\uc18c\uac12, y \ucd5c\ub313\uac12 - y \ucd5c\uc18c\uac12)\uc73c\ub85c \ub098\ub204\uae30\ub85c \ud588\ub2e4.  "),(0,r.kt)("h3",{id:"\uc704\uacbd\ub3c4-\ucc98\ub9ac-\ubc29\ubc95"},"\uc704\uacbd\ub3c4 \ucc98\ub9ac \ubc29\ubc95"),(0,r.kt)("p",null,"\uc785\ub825\uac12 \uc608\uc2dc",(0,r.kt)("br",{parentName:"p"}),"\n","x = ","[126.9797895, 126.979215, 126.9766789]",(0,r.kt)("br",{parentName:"p"}),"\n","y = ","[37.5670131, 37.5670131, 37.5670131]",(0,r.kt)("br",{parentName:"p"}),"\n","PIXEL = 255"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\uacbd\ub85c\ub97c \uc77c\uad00\uc131 \uc788\uac8c \uadf8\ub9ac\uae30 \uc704\ud55c \uac12\uc744 \uad6c\ud55c\ub2e4. ",(0,r.kt)("inlineCode",{parentName:"li"},"\uc785\ub825\ubc1b\uc740 \uc704\uacbd\ub3c4 \ubc30\uc5f4\uc758 max(x \ucd5c\ub313\uac12 - x \ucd5c\uc18c\uac12, y \ucd5c\ub313\uac12 - y \ucd5c\uc18c\uac12)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"0.0031105999999994083"))),(0,r.kt)("li",{parentName:"ol"},"\uc785\ub825\ubc1b\uc740 \uc704\uce58 \ubc30\uc5f4\uc744 \uc815\uaddc\ud654\ud55c\ub2e4. ",(0,r.kt)("inlineCode",{parentName:"li"},"(x - \ucd5c\uc18c\uac12) / {1\ubc88\uc5d0\uc11c \uad6c\ud55c \uac12}"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"[1.0, 0.8153089436124402, 0.0]"))),(0,r.kt)("li",{parentName:"ol"},"\uc815\uaddc\ud654\ud55c \ubc30\uc5f4\uc744 \ud53d\uc140 \uac12\uc73c\ub85c \uacf1\ud574\uc900\ub2e4.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"[255, 207, 0]")))),(0,r.kt)("h3",{id:"\uc774\ubbf8\uc9c0-\ucd9c\ub825-\ubc29\uc2dd"},"\uc774\ubbf8\uc9c0 \ucd9c\ub825 \ubc29\uc2dd"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\uc704\uacbd\ub3c4\ub97c \ucc98\ub9ac\ud55c \uac12\uc73c\ub85c \ubc30\uc5f4 \ud615\ud0dc\ub85c \uc810\uc744 \ucc0d\uc740 \ub2e4\uc74c \uc774\ubbf8\uc9c0 \ud615\ud0dc\ub85c \uc800\uc7a5"),(0,r.kt)("li",{parentName:"ol"},"\ud50c\ub86f\uc744 \uadf8\ub824\uc8fc\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac \uc0ac\uc6a9\ud558\uc5ec \uc774\ubbf8\uc9c0 \ud615\ud0dc\ub85c \uc800\uc7a5")),(0,r.kt)("p",null,"\uc774\ubbf8\uc9c0 \ucd9c\ub825 \ubc29\uc2dd\uc758 \uacbd\uc6b0 1\ubc88\uacfc 2\ubc88\uc744 \uace0\ubbfc\ud588\uc5c8\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc810\uc774 \uc544\ub2cc \uc120 \ud615\ud0dc\ub85c \uacbd\ub85c\ub97c \ubcf4\uc5ec\uc904 \uc218 \uc788\ub3c4\ub85d \ud50c\ub86f\uc744 \uadf8\ub824\uc8fc\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uc778 matplotlib\uc744 \uc0ac\uc6a9\ud558\uae30\ub85c \ud588\ub2e4.  "),(0,r.kt)("h3",{id:"\ub85c\uceec\uc5d0\uc11c-\uae30\ub2a5-\uad6c\ud604"},"\ub85c\uceec\uc5d0\uc11c \uae30\ub2a5 \uad6c\ud604"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import matplotlib.pyplot as plt\n\nPIXEL = 255\n\ndef draw(point):\n    x, y = zip(*point)\n    pixel_x, pixel_y = convert_to_pixel_values(x, y)\n    draw_lines(pixel_x, pixel_y)\n\ndef convert_to_pixel_values(x, y):\n    max_diff = max(max(x) - min(x), max(y) - min(y))\n    return scale_to_pixel_values(x, max_diff), scale_to_pixel_values(y, max_diff)\n\ndef scale_to_pixel_values(points, max_diff):\n    min_value = min(points)\n    scaled_coordinates = [(p - min_value) / max_diff for p in points]\n    pixel_values = [int(p * PIXEL) for p in scaled_coordinates]\n    return pixel_values\n\ndef draw_lines(x, y):\n    plt.plot(x, y, 'k-', linewidth=10)\n    plt.axis('off')\n    plt.savefig('name.png', transparent=True, format='png')\n\npoint = [\n    [126.9797895, 37.5670131],\n    [126.979215, 37.5670131],\n    [126.9766789, 37.5670131],\n]\n\ndraw(point)\n")),(0,r.kt)("h2",{id:"\ubc30\ud3ec"},"\ubc30\ud3ec"),(0,r.kt)("h3",{id:"aws-lambda"},"AWS Lambda"),(0,r.kt)("p",null,"\uc12c\ub124\uc77c \uc0dd\uc131 \uc11c\ubc84\ub97c \ub530\ub85c \ub450\uae30\ub294 \uae30\ub2a5 \ub300\ube44 \ube44\uc6a9\uc774 \ub108\ubb34 \ud074 \uac83\uc774\ub77c\uace0 \uc0dd\uac01\ud588\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ub530\ub77c\uc11c \uc11c\ubc84\ub9ac\uc2a4\ub85c \ud30c\uc77c\uc744 \ucc98\ub9ac\ud588\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ucd94\uac00\ub85c s3 \uc811\uadfc\uc740 boto3\ub97c \uc0ac\uc6a9\ud588\ub2e4.  "),(0,r.kt)("h3",{id:"\ub78c\ub2e4-s3-\uc811\uadfc\uc744-\uc704\ud55c-iam-\uc0dd\uc131"},"\ub78c\ub2e4 S3 \uc811\uadfc\uc744 \uc704\ud55c IAM \uc0dd\uc131"),(0,r.kt)("p",null,"AmazonS3FullAccess, AmazonS3ObjectLambdaExecutionRolePolicy \ub450\uac00\uc9c0\ub97c \ucd94\uac00\ud574\uc11c Lambda \uc804\uc6a9 \uc5ed\ud560\uc744 \ub9cc\ub4e4\uc5b4 \uc0ac\uc6a9\ud588\ub2e4.  "),(0,r.kt)("h3",{id:"\ub78c\ub2e4-\ubc30\ud3ec\uc6a9-\ucf54\ub4dc"},"\ub78c\ub2e4 \ubc30\ud3ec\uc6a9 \ucf54\ub4dc"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\nimport io\nimport uuid\n\nimport boto3\nimport matplotlib.pyplot as plt\n\nPIXEL = 255\nBUCKET_NAME = 'image-plot'\nS3 = 's3'\n\ndef lambda_handler(event, context):\n    x = event['x']\n    y = event['y']\n    image_name = str(uuid.uuid4())\n\n    img_data = draw(x, y)\n    s3 = boto3.client(S3)\n    s3.put_object(Body=img_data.getvalue(), ContentType='image/png', Bucket=BUCKET_NAME, Key=image_name)\n    url = f'https://{BUCKET_NAME}.s3.ap-northeast-2.amazonaws.com/{image_name}'\n\n    return {\n        'statusCode': 200,\n        'body': url\n    }\n\ndef draw(x, y):\n    pixel_x, pixel_y = convert_to_pixel_values(x, y)\n    img_data = draw_lines(pixel_x, pixel_y)\n    plt.close()\n    return img_data\n\ndef convert_to_pixel_values(x, y):\n    max_diff = max(max(x) - min(x), max(y) - min(y))\n    return scale_to_pixel_values(x, max_diff), scale_to_pixel_values(y, max_diff)\n\ndef scale_to_pixel_values(points, max_diff):\n    min_value = min(points)\n    scaled_coordinates = [(p - min_value) / max_diff for p in points]\n    pixel_values = [int(p * PIXEL) for p in scaled_coordinates]\n    return pixel_values\n\ndef draw_lines(x, y):\n    plt.plot(x, y, 'k-', linewidth=10)\n    plt.axis('off')\n    img_data = io.BytesIO()\n    plt.savefig(img_data, transparent=True, format='png')\n    img_data.seek(0)\n    return img_data\n\n")),(0,r.kt)("h3",{id:"layer-\ucd94\uac00\ub97c-\uc704\ud55c-zip-\ud30c\uc77c-\uc0dd\uc131"},"Layer \ucd94\uac00\ub97c \uc704\ud55c zip \ud30c\uc77c \uc0dd\uc131"),(0,r.kt)("p",null,"matplotlib\uc758 \uacbd\uc6b0 \uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\uae30 \ub54c\ubb38\uc5d0 \ub530\ub85c Layer\ub97c \ucd94\uac00\ud574\uc57c \ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","zip \ud30c\uc77c\uc744 \ub9cc\ub4e4\uc5b4\uc11c \uc5c5\ub85c\ub4dc\ud574\uc57c\ud55c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc774\ub54c python\uc758 Lambda \ub7f0\ud0c0\uc784\uc5d0 \ub300\ud55c \uacc4\uce35 \uacbd\ub85c\ub294 python\uc774\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ub530\ub77c\uc11c \uc555\ucd95\ud55c zip \ud30c\uc77c\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \uad6c\uc870\ub97c \ub744\uc5b4\uc57c \ud55c\ub2e4.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pillow.zip\n\u2502 python/PIL\n\u2514 python/Pillow-5.3.0.dist-info\n")),(0,r.kt)("p",null,"Ubuntu \uae30\uc900 \ub2e4\uc74c \uba85\ub839\uc5b4\ub97c \uc785\ub825\ud558\uc5ec \uc0dd\uc131\uc744 \uc9c4\ud589\ud588\ub2e4.  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo apt update\nsudo apt install zip\nsudo apt install python3-pip\n\nmkdir python\npip3 install matplotlib -t python # pip3 install \uc124\uce58\ud560_\ud328\ud0a4\uc9c0 -t \uc124\uce58_\uacbd\ub85c\nzip -r my_layer.zip python # zip -r \uc555\ucd95_\ud30c\uc77c\uba85 \uc555\ucd95_\ud30c\uc77c\uc774_\uc874\uc7ac\ud558\ub294_\uacbd\ub85c\n")),(0,r.kt)("h3",{id:"no-module-named-numpycore_multiarray_umath-\uc5d0\ub7ec"},(0,r.kt)("inlineCode",{parentName:"h3"},"No module named 'numpy.core._multiarray_umath'")," \uc5d0\ub7ec"),(0,r.kt)("p",null,"Layer \ucd94\uac00 \ud6c4 \ub78c\ub2e4 \uc2e4\ud589 \uc2dc \ubc1c\uc0dd\ud55c \uc5d0\ub7ec\uc600\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ucc98\uc74c\uc5d0 mac\uc5d0\uc11c zip \ud30c\uc77c\uc744 \uc0dd\uc131\ud574\uc11c \uc5c5\ub85c\ub4dc\ud588\ub294\ub370 \ud574\ub2f9 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud588\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uc774\ub294 lambda\uac00 \ub3cc\uc544\uac00\ub294 \ub3d9\uc77c\ud55c \ud658\uacbd\uc5d0\uc11c layer\ub97c \uc704\ud55c zip \ud30c\uc77c\uc744 \ub9cc\ub4e4\uc9c0 \uc54a\uc544\uc11c \ubc1c\uc0dd\ud558\ub294 \ubb38\uc81c\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\uac04\ub2e8\ud558\uac8c ec2 \uc778\uc2a4\ud134\uc2a4\ub97c \ud558\ub098 \ub9cc\ub4e4\uc5b4\uc11c \ub530\ub85c Layer\ub97c \uc0dd\uc131\ud558\uba74 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud558\uc9c0 \uc54a\ub294\ub2e4.  "),(0,r.kt)("h2",{id:"\uc801\uc815\uae30\uc220\uc5d0-\ub300\ud55c-\uc0dd\uac01"},"\uc801\uc815\uae30\uc220\uc5d0 \ub300\ud55c \uc0dd\uac01"),(0,r.kt)("p",null,"\ud504\ub85c\uc81d\ud2b8\uc5d0 Lambda\ub97c \uc0ac\uc6a9\ud558\ub824\uace0 \ud588\uc9c0\ub9cc \uc544\uc27d\uac8c\ub3c4 \ubc18\ub824\ub2f9\ud588\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","AWS Lambda\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83\uc740 \uc778\uc2a4\ud134\uc2a4\uc5d0 \ud574\ub2f9 \ucf54\ub4dc\ub97c \ubc30\ud3ec\ud558\ub294 \uac83\ubcf4\ub2e4 \ub354 \ud6a8\uc728\uc801\uc778 \ubc29\ubc95\uc77c \uc218 \uc788\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ud558\uc9c0\ub9cc \ud604\uc7ac \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uac00\uc6a9 \uac00\ub2a5\ud55c \uc790\uc6d0, \uae30\uc220\uc758 \ub09c\uc774\ub3c4, \uc0ac\uc6a9\ud558\ub294 \ud300\uc6d0\uc744 \uace0\ub824\ud55c\ub2e4\uba74 Lambda\ub294 \uc801\uc815\uae30\uc220\uc774 \uc544\ub2d0 \uc218 \uc788\ub2e4.",(0,r.kt)("br",{parentName:"p"}),"\n","\ub530\ub77c\uc11c \ud574\ub2f9 \uc774\ubbf8\uc9c0 \uc0dd\uc131\uae30\ub97c \uc5b4\ub5bb\uac8c \uc801\uc6a9\ud560\uc9c0 \uc870\uae08 \ub354 \uace0\ub824\ub97c \ud574\uc57c \ub420 \uac83\uc73c\ub85c \ubcf4\uc778\ub2e4.  "),(0,r.kt)("h2",{id:"\ucc38\uace0-\uc790\ub8cc"},"\ucc38\uace0 \uc790\ub8cc"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://aws.amazon.com/ko/lambda/"},"AWS Lambda"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/configuration-layers.html"},"Lambda Layer"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/ko_kr/lambda/latest/dg/python-package.html"},"Python Lambda \ud568\uc218\uc5d0 \ub300\ud55c .zip \ud30c\uc77c \uc544\uce74\uc774\ube0c \uc791\uc5c5"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://gist.github.com/ksmin23/0f3f243408a8497f766b43cf589fea7b"},"No module named 'numpy.core._multiarray_umath'"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("a",{parentName:"p",href:"https://techblog.woowahan.com/6217/"},"\uc0ac\ub840\ubcc4\ub85c \uc54c\uc544\ubcf8 \uc548\uc804\ud55c S3 \uc0ac\uc6a9 \uac00\uc774\ub4dc")))}d.isMDXComponent=!0}}]);